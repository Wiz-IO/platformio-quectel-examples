/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.7.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 12/24/2019
 ***********************************************************************************************/

#ifndef SENSOR_INTERFACE_H
#define SENSOR_INTERFACE_H

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include "digitaltwin_interface_client.h"
#include "azure_c_shared_utility/xlogging.h"
#include "azure_c_shared_utility/threadapi.h"
#include "azure_c_shared_utility/uuid.h"

#include "digitaltwin_client_helper.h"
#include "digitaltwin_serializer.h"
#include "parson.h"
#include "../sample_device_impl.h"

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum SENSOR_TELEMETRY_TAG
{
    Sensor_TEMP_TELEMETRY,
    Sensor_HUMID_TELEMETRY
} SENSOR_TELEMETRY;

typedef enum SENSOR_READONLY_PROPERTY_TAG
{
    Sensor_STATE_PROPERTY,
    Sensor_NAME_PROPERTY,
    Sensor_BRIGHTNESS_PROPERTY
} SENSOR_PROPERTY;

typedef enum SENSOR_RUNDIAGNOSTICS_STATUS_TAG
{
    SENSOR_RUNDIAGNOSTICS_INACTIVE,
    SENSOR_RUNDIAGNOSTICS_RUNNING,
    SENSOR_RUNDIAGNOSTICS_COMPLETED,
    SENSOR_RUNDIAGNOSTICS_ERROR
} SENSOR_RUNDIAGNOSTICS_STATUS;

// DigitalTwin interface name from service perspective.
static const char SensorInterfaceId[] = "urn:dmd9205:EnvironmentalSensor:1";
static const char SensorInterfaceInstanceName[] = "sensor";

// Telemetry names for this interface.

static const char SensorInterface_TempTelemetry[] = "temp";

static const char SensorInterface_HumidTelemetry[] = "humid";

// Property names for this interface.

#define SensorInterface_StateProperty "state"

#define SensorInterface_NameProperty "name"

#define SensorInterface_BrightnessProperty "brightness"

// Command names for this interface

#define SensorInterface_BlinkCommand "blink"

#define SensorInterface_TurnonCommand "turnon"

#define SensorInterface_TurnoffCommand "turnoff"

#define SensorInterface_RundiagnosticsCommand "rundiagnostics"

// Methods
DIGITALTWIN_INTERFACE_CLIENT_HANDLE SensorInterface_Create();

void SensorInterface_Close(DIGITALTWIN_INTERFACE_CLIENT_HANDLE digitalTwinInterfaceClientHandle);

DIGITALTWIN_CLIENT_RESULT SensorInterface_Telemetry_SendAll();

DIGITALTWIN_CLIENT_RESULT SensorInterface_Property_ReportAll();

DIGITALTWIN_CLIENT_RESULT SensorInterface_Property_ReportState();

DIGITALTWIN_CLIENT_RESULT SensorInterface_Rundiagnostics_UpdateStatus(SENSOR_RUNDIAGNOSTICS_STATUS commandStatus, int statusCode);

#ifdef __cplusplus
}
#endif

#endif  // SENSOR_INTERFACE_H
